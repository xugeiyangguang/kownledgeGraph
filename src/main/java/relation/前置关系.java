package relation;

import java.util.ArrayList;
import java.util.List;

public class 前置关系 {
    public static String getChineseName() {
        return "前置关系";
    }

    /**\
     * 关系的开始节点
     * @return 开始节点
     */
    public static List<String> getStartNodes() {
        List<String> startNodes = new ArrayList<>();
        startNodes.add("相似三角形");
        startNodes.add("全等三角形");
        startNodes.add("直角三角形");
        startNodes.add("直角三角形");
        startNodes.add("锐角三角形");
        startNodes.add("锐角三角形");
        startNodes.add("钝角三角形");
        startNodes.add("钝角三角形");
        startNodes.add("角平分线");
        startNodes.add("相似多边形");
        startNodes.add("正多边形的对称轴");
        startNodes.add("正多边形的对称轴");
        startNodes.add("相似多边形");
        startNodes.add("相似三角形");
        startNodes.add("全等三角形");
        startNodes.add("相似多边形");
        startNodes.add("位似图形");
        startNodes.add("勾股定理");
        startNodes.add("勾股数");
        startNodes.add("同心圆");
        startNodes.add("等圆");
        startNodes.add("圆心角");
        startNodes.add("圆周角");
        startNodes.add("弓形");
        startNodes.add("扇形");
        startNodes.add("扇形的面积");
        startNodes.add("圆内接四边形");
        startNodes.add("圆的对称性");
        startNodes.add("圆的对称性");
        startNodes.add("垂径定理");
        startNodes.add("弦心距");
        startNodes.add("点与圆的位置关系");
        startNodes.add("直线与圆的位置关系");
        startNodes.add("直线与圆的位置关系");
        startNodes.add("三角形的内心");
        startNodes.add("三角形的内切圆");
        startNodes.add("三角形的内切圆");
        startNodes.add("圆的外切四边形");
        startNodes.add("圆与圆的位置关系");
        startNodes.add("轴对称图形");
        startNodes.add("中心对称图形");
        startNodes.add("角的度量");
        startNodes.add("方向角");
        startNodes.add("方位角");
        startNodes.add("对顶角");
        startNodes.add("邻补角");
        startNodes.add("同位角");
        startNodes.add("内错角");
        startNodes.add("同旁内角");
        startNodes.add("黄金分割");
        startNodes.add("对顶角");
        startNodes.add("邻补角");
        startNodes.add("同位角");
        startNodes.add("内错角");
        startNodes.add("同旁内角");
        startNodes.add("正多边形的中心");
        startNodes.add("正多边形的中心角");
        startNodes.add("正多边形的半径");
        startNodes.add("正多边形的边心距");
        startNodes.add("两条线段的比");
        startNodes.add("两条线段的比");
        startNodes.add("比例线段");
        startNodes.add("比例线段");
        startNodes.add("平行线分线段成比例");
        startNodes.add("平行线分线段成比例");
        startNodes.add("两点之间的距离");
        startNodes.add("尺规作图");
        startNodes.add("垂线段最短");
        startNodes.add("相等向量");
        startNodes.add("平行向量");
        startNodes.add("相反向量");
        startNodes.add("平面向量基本定理");
        startNodes.add("平面向量的正交分解");
        startNodes.add("向量的加法");
        startNodes.add("向量的数乘");
        startNodes.add("向量的减法");
        startNodes.add("向量共线");
        startNodes.add("向量平行");
        startNodes.add("向量垂直");
        startNodes.add("向量的数量积");
        startNodes.add("向量的坐标表示");
        startNodes.add("共面向量");
        startNodes.add("空间向量的基本定理");
        startNodes.add("空间中点的向量表示");
        startNodes.add("直线的向量表示");
        startNodes.add("面的向量表示");
        startNodes.add("椭圆的标准方程");
        startNodes.add("双曲线的标准方程");
        startNodes.add("共渐近线的双曲线系");
        startNodes.add("共渐近线的双曲线系");
        startNodes.add("抛物线的标准方程");
        startNodes.add("抛物线的焦点弦性质");
        startNodes.add("直线与椭圆的位置关系");
        startNodes.add("直线与抛物线的位置关系");
        startNodes.add("直线与双曲线的位置关系");
        startNodes.add("曲线的轨迹方程");
        startNodes.add("中点弦问题");
        startNodes.add("圆锥曲线的对称问题");
        startNodes.add("圆锥曲线的对称问题");
        startNodes.add("直线的方程");
        startNodes.add("直线的方程");
        startNodes.add("点到直线的距离");
        startNodes.add("两直线的交点");
        startNodes.add("两直线的夹角");
        startNodes.add("圆的方程");
        startNodes.add("点与圆的位置关系");
        startNodes.add("直线与圆的位置关系");
        startNodes.add("圆与圆的位置关系");
        startNodes.add("空间中点的坐标");
        startNodes.add("空间中两点的距离公式");
        startNodes.add("空间中对称点的坐标");
        startNodes.add("中点坐标公式");
        startNodes.add("三角形的重心公式");
        startNodes.add("三角形的重心公式");
        startNodes.add("单位正交基底");
        startNodes.add("有序数对");
        startNodes.add("象限");
        startNodes.add("各象限内点的坐标的符号特征");
        startNodes.add("平面中点的坐标");
        startNodes.add("坐标轴上的点的坐标特征");
        startNodes.add("象限角的平分线上的点的坐标特征");
        startNodes.add("与坐标轴平行的直线上的点的坐标特征");
        startNodes.add("点到坐标轴的距离");
        startNodes.add("极坐标方程");
        startNodes.add("极坐标和直角坐标相互转换");
        startNodes.add("极坐标和直角坐标相互转换");
        startNodes.add("柱坐标和直角坐标相互转换");
        startNodes.add("柱坐标和直角坐标相互转换");
        startNodes.add("球坐标和直角坐标相互转换");
        startNodes.add("球坐标和直角坐标相互转换");
        startNodes.add("参数方程与普通方程的转化");
        startNodes.add("圆的参数方程");
        startNodes.add("圆的参数方程");
        startNodes.add("椭圆的参数方程");
        startNodes.add("椭圆的参数方程");
        startNodes.add("抛物线的参数方程");
        startNodes.add("抛物线的参数方程");
        startNodes.add("双曲线的参数方程");
        startNodes.add("双曲线的参数方程");
        startNodes.add("直线的参数方程");
        startNodes.add("直线的参数方程");
        startNodes.add("渐近线的参数方程");
        startNodes.add("渐近线的参数方程");
        startNodes.add("摆线的参数方程");
        startNodes.add("摆线的参数方程");
        startNodes.add("多面体的侧面积");
        startNodes.add("多面体的体积");
        startNodes.add("圆柱的侧面展开图");
        startNodes.add("三棱锥的表面积");
        startNodes.add("三棱锥的体积");
        startNodes.add("圆锥的侧面展开图");
        startNodes.add("旋转体的侧面积");
        startNodes.add("旋转体的表面积");
        startNodes.add("旋转体的体积");
        startNodes.add("投影");
        startNodes.add("三视图");
        startNodes.add("直观图");
        startNodes.add("立体图形的平面展开图");
        startNodes.add("点与直线的关系");
        startNodes.add("点与面的关系");
        startNodes.add("直线与平面的关系");
        startNodes.add("两直线的位置关系");
        startNodes.add("两平面的位置关系");
        startNodes.add("点到平面的距离");
        startNodes.add("直线和平面间的距离");
        startNodes.add("直线和平面间的距离");
        startNodes.add("两直线的距离");

        return startNodes;
    }

    /**\
     * 关系的结束节点
     * @return 结束节点
     */
    public static List<String> getEndNodes() {
        List<String> endNodes = new ArrayList<>();
        endNodes.add("三角形");
        endNodes.add("三角形");
        endNodes.add("三角形");
        endNodes.add("直角");
        endNodes.add("锐角");
        endNodes.add("三角形");
        endNodes.add("三角形");
        endNodes.add("钝角");
        endNodes.add("角");
        endNodes.add("相似形");
        endNodes.add("正多边形");
        endNodes.add("对称轴");
        endNodes.add("多边形");
        endNodes.add("相似");
        endNodes.add("全等");
        endNodes.add("相似");
        endNodes.add("位似");
        endNodes.add("直角三角形");
        endNodes.add("勾股定理");
        endNodes.add("圆");
        endNodes.add("圆");
        endNodes.add("圆");
        endNodes.add("圆");
        endNodes.add("弧");
        endNodes.add("弧");
        endNodes.add("扇形");
        endNodes.add("圆");
        endNodes.add("圆");
        endNodes.add("对称");
        endNodes.add("圆");
        endNodes.add("圆");
        endNodes.add("圆");
        endNodes.add("圆");
        endNodes.add("直线");
        endNodes.add("角平分线");
        endNodes.add("三角形");
        endNodes.add("圆");
        endNodes.add("圆");
        endNodes.add("圆");
        endNodes.add("轴对称");
        endNodes.add("中心对称");
        endNodes.add("角");
        endNodes.add("角");
        endNodes.add("角");
        endNodes.add("角");
        endNodes.add("角");
        endNodes.add("角");
        endNodes.add("角");
        endNodes.add("角");
        endNodes.add("比例");
        endNodes.add("两直线相交");
        endNodes.add("两直线相交");
        endNodes.add("两直线相交");
        endNodes.add("两直线相交");
        endNodes.add("两直线相交");
        endNodes.add("圆");
        endNodes.add("圆");
        endNodes.add("圆");
        endNodes.add("圆");
        endNodes.add("线段");
        endNodes.add("比例");
        endNodes.add("线段");
        endNodes.add("比例");
        endNodes.add("两直线平行");
        endNodes.add("比例");
        endNodes.add("线");
        endNodes.add("线");
        endNodes.add("垂线");
        endNodes.add("向量");
        endNodes.add("向量");
        endNodes.add("向量");
        endNodes.add("向量");
        endNodes.add("向量");
        endNodes.add("向量");
        endNodes.add("向量");
        endNodes.add("向量");
        endNodes.add("向量");
        endNodes.add("向量");
        endNodes.add("向量");
        endNodes.add("向量");
        endNodes.add("向量");
        endNodes.add("向量");
        endNodes.add("向量");
        endNodes.add("向量");
        endNodes.add("向量");
        endNodes.add("向量");
        endNodes.add("椭圆");
        endNodes.add("双曲线");
        endNodes.add("双曲线");
        endNodes.add("渐近线");
        endNodes.add("抛物线");
        endNodes.add("抛物线");
        endNodes.add("椭圆");
        endNodes.add("抛物线");
        endNodes.add("双曲线");
        endNodes.add("圆锥曲线");
        endNodes.add("圆锥曲线");
        endNodes.add("圆锥曲线");
        endNodes.add("对称");
        endNodes.add("方程");
        endNodes.add("直线");
        endNodes.add("直线的方程");
        endNodes.add("直线的方程");
        endNodes.add("直线的方程");
        endNodes.add("方程");
        endNodes.add("圆的方程");
        endNodes.add("圆的方程");
        endNodes.add("圆的方程");
        endNodes.add("空间直角坐标系");
        endNodes.add("空间中点的坐标");
        endNodes.add("空间中点的坐标");
        endNodes.add("空间中点的坐标");
        endNodes.add("三角形");
        endNodes.add("三角形的重心");
        endNodes.add("空间直角坐标系");
        endNodes.add("平面直角坐标系");
        endNodes.add("直角坐标系");
        endNodes.add("平面中点的坐标");
        endNodes.add("平面直角坐标系");
        endNodes.add("平面中点的坐标");
        endNodes.add("平面中点的坐标");
        endNodes.add("平面中点的坐标");
        endNodes.add("平面中点的坐标");
        endNodes.add("极坐标系");
        endNodes.add("极坐标系");
        endNodes.add("直角坐标系");
        endNodes.add("直角坐标系");
        endNodes.add("柱坐标系");
        endNodes.add("直角坐标系");
        endNodes.add("球坐标系");
        endNodes.add("参数方程");
        endNodes.add("参数方程");
        endNodes.add("圆");
        endNodes.add("椭圆");
        endNodes.add("参数方程");
        endNodes.add("参数方程");
        endNodes.add("抛物线");
        endNodes.add("参数方程");
        endNodes.add("双曲线");
        endNodes.add("参数方程");
        endNodes.add("直线");
        endNodes.add("参数方程");
        endNodes.add("渐近线");
        endNodes.add("参数方程");
        endNodes.add("摆线");
        endNodes.add("多面体");
        endNodes.add("多面体");
        endNodes.add("圆柱");
        endNodes.add("三棱锥");
        endNodes.add("三棱锥");
        endNodes.add("圆锥");
        endNodes.add("旋转体");
        endNodes.add("旋转体");
        endNodes.add("旋转体");
        endNodes.add("空间几何体");
        endNodes.add("空间几何体");
        endNodes.add("空间几何体");
        endNodes.add("空间几何体");
        endNodes.add("直线的方程");
        endNodes.add("平面");
        endNodes.add("平面");
        endNodes.add("直线");
        endNodes.add("平面");
        endNodes.add("平面");
        endNodes.add("平面");
        endNodes.add("平面");
        endNodes.add("直线");
        return endNodes;
    }
}
