package relation;

import java.util.ArrayList;
import java.util.List;

public class 包含关系 {
    public static String getChineseName() {
        return "包含关系";
    }

    /**\
     * 关系的开始节点
     * @return 开始节点
     */
    public static List<String> getStartNodes() {
        List<String> startNodes = new ArrayList<>();
        //  startNodes.add("三角形");
        startNodes.add("直线的方程");
        startNodes.add("直线的方程");
        startNodes.add("直线的方程");
        startNodes.add("直线的方程");
        startNodes.add("直线的方程");
        startNodes.add("圆的方程");
        startNodes.add("圆的方程");
        startNodes.add("象限");
        startNodes.add("象限");
        startNodes.add("象限");
        startNodes.add("象限");
        startNodes.add("象限");
        startNodes.add("象限");
        startNodes.add("象限");
        startNodes.add("象限");
        startNodes.add("极坐标方程");
        startNodes.add("极坐标方程");
        startNodes.add("极坐标方程");
        startNodes.add("三视图");
        startNodes.add("三视图");
        startNodes.add("三视图");
        startNodes.add("直线与平面的关系");
        startNodes.add("直线与平面的关系");
        startNodes.add("直线与平面的关系");
        startNodes.add("两平面的位置关系");
        startNodes.add("两平面的位置关系");
        startNodes.add("两平面的位置关系");
        startNodes.add("代数式");
        startNodes.add("代数式");
        startNodes.add("代数式");
        startNodes.add("方程");
        startNodes.add("方程");
        startNodes.add("方程");
        startNodes.add("方程");
        startNodes.add("集合的表示法");
        startNodes.add("集合的表示法");
        startNodes.add("集合的表示法");
        startNodes.add("集合的分类");
        startNodes.add("集合的分类");
        startNodes.add("集合的分类");
        startNodes.add("集合的分类");
        startNodes.add("常用的数集符号");
        startNodes.add("常用的数集符号");
        startNodes.add("常用的数集符号");
        startNodes.add("常用的数集符号");
        startNodes.add("常用的数集符号");
        startNodes.add("常用的数集符号");
        startNodes.add("集合之间的关系");
        startNodes.add("集合之间的关系");
        startNodes.add("集合之间的关系");
        startNodes.add("集合之间的关系");
        startNodes.add("集合之间的关系");
        startNodes.add("集合之间的关系");
        startNodes.add("集合的分类");
        startNodes.add("集合的分类");
        startNodes.add("集合的分类");
        startNodes.add("集合的分类");
        startNodes.add("区间");
        startNodes.add("区间");
        startNodes.add("区间");
        startNodes.add("函数");
        startNodes.add("函数");
        startNodes.add("函数的表示");
        startNodes.add("函数的表示");
        startNodes.add("函数的表示");
        startNodes.add("函数");
        startNodes.add("函数");
        startNodes.add("函数的奇偶性");
        startNodes.add("函数的奇偶性");
        startNodes.add("函数图像变化的四种形式");
        startNodes.add("函数图像变化的四种形式");
        startNodes.add("函数图像变化的四种形式");
        startNodes.add("函数图像变化的四种形式");
        startNodes.add("方根");
        startNodes.add("方根");
        startNodes.add("函数");
        startNodes.add("函数");
        startNodes.add("函数");
        startNodes.add("函数");
        startNodes.add("函数");
        startNodes.add("一次函数");
        startNodes.add("函数");
        startNodes.add("二次函数");
        startNodes.add("函数");
        startNodes.add("反比例函数");
        startNodes.add("角");
        startNodes.add("角");
        startNodes.add("角");
        startNodes.add("角的单位制");
        startNodes.add("角的单位制");
        startNodes.add("象限角的表示");
        startNodes.add("象限角的表示");
        startNodes.add("象限角的表示");
        startNodes.add("象限角的表示");
        startNodes.add("三角函数的分类");
        startNodes.add("三角函数的分类");
        startNodes.add("三角函数的分类");
        startNodes.add("三角函数线");
        startNodes.add("三角函数线");
        startNodes.add("三角函数线");
        startNodes.add("特殊角的三角函数值");
        startNodes.add("特殊角的三角函数值");
        startNodes.add("特殊角的三角函数值");
        startNodes.add("数列的表示法");
        startNodes.add("数列的表示法");
        startNodes.add("数列的表示法");
        startNodes.add("数列的分类");
        startNodes.add("数列的分类");
        startNodes.add("数列的分类");
        startNodes.add("数列的分类");
        startNodes.add("数列的分类");
        startNodes.add("数列的分类");
        startNodes.add("数列的分类");
        startNodes.add("数列的分类");
        startNodes.add("数列的分类");
        startNodes.add("数列");
        startNodes.add("数列");
        startNodes.add("不等式");
        startNodes.add("不等式");
        startNodes.add("不等式");
        startNodes.add("不等式");
        startNodes.add("不等式");
        startNodes.add("不等式");
        startNodes.add("不等式");
        startNodes.add("不等式");
        startNodes.add("不等式");
        startNodes.add("不等式");

        return startNodes;
    }

    /**\
     * 关系的结束节点
     * @return 结束节点
     */
    public static List<String> getEndNodes() {
        List<String> endNodes = new ArrayList<>();
        //  endNodes.add("三角形的中线");
        endNodes.add("点斜式");
        endNodes.add("斜截式");
        endNodes.add("两点式");
        endNodes.add("截距式");
        endNodes.add("一般式");
        endNodes.add("圆的一般方程");
        endNodes.add("圆的标准方程");
        endNodes.add("第一象限");
        endNodes.add("第二象限");
        endNodes.add("第三象限");
        endNodes.add("第四象限");
        endNodes.add("第五象限");
        endNodes.add("第六象限");
        endNodes.add("第七象限");
        endNodes.add("第八象限");
        endNodes.add("曲线的极坐标方程");
        endNodes.add("直线的极坐标方程");
        endNodes.add("圆的极坐标方程");
        endNodes.add("主视图");
        endNodes.add("侧视图");
        endNodes.add("俯视图");
        endNodes.add("直线与平面垂直");
        endNodes.add("直线与平面平行");
        endNodes.add("直线与平面相交");
        endNodes.add("两平面相交");
        endNodes.add("两平面平行");
        endNodes.add("两平面垂直");
        endNodes.add("整式");
        endNodes.add("分式");
        endNodes.add("二次根式");
        endNodes.add("一元一次方程");
        endNodes.add("一元二次方程");
        endNodes.add("二元一次方程");
        endNodes.add("二元一次方程组");
        endNodes.add("列举法");
        endNodes.add("描述法");
        endNodes.add("图示法");
        endNodes.add("有限集");
        endNodes.add("无限集");
        endNodes.add("数集");
        endNodes.add("点集");
        endNodes.add("非负整数集");
        endNodes.add("正整数集");
        endNodes.add("整数集");
        endNodes.add("有理数集");
        endNodes.add("实数集");
        endNodes.add("复数集合");
        endNodes.add("子集");
        endNodes.add("真子集");
        endNodes.add("集合相等");
        endNodes.add("交集");
        endNodes.add("并集");
        endNodes.add("补集");
        endNodes.add("全集");
        endNodes.add("空集");
        endNodes.add("偶数集");
        endNodes.add("奇数集");
        endNodes.add("闭区间");
        endNodes.add("开区间");
        endNodes.add("半开半闭区间");
        endNodes.add("复合函数");
        endNodes.add("分段函数");
        endNodes.add("解析法");
        endNodes.add("列表法");
        endNodes.add("图像法");
        endNodes.add("增函数");
        endNodes.add("减函数");
        endNodes.add("奇函数");
        endNodes.add("偶函数");
        endNodes.add("平移变换");
        endNodes.add("翻折变换");
        endNodes.add("伸缩变换");
        endNodes.add("对称变换");
        endNodes.add("平方根");
        endNodes.add("立方根");
        endNodes.add("指数函数");
        endNodes.add("对数函数");
        endNodes.add("反函数");
        endNodes.add("幂函数");
        endNodes.add("一次函数");
        endNodes.add("正比例函数");
        endNodes.add("二次函数");
        endNodes.add("抛物线");
        endNodes.add("反比例函数");
        endNodes.add("双曲线");
        endNodes.add("正角");
        endNodes.add("负角");
        endNodes.add("零角");
        endNodes.add("角度制");
        endNodes.add("弧度制");
        endNodes.add("第一象限角");
        endNodes.add("第二象限角");
        endNodes.add("第三象限角");
        endNodes.add("第四象限角");
        endNodes.add("正弦");
        endNodes.add("余弦");
        endNodes.add("正切");
        endNodes.add("正弦线");
        endNodes.add("余弦线");
        endNodes.add("正切线");
        endNodes.add("正弦值");
        endNodes.add("余弦值");
        endNodes.add("正切值");
        endNodes.add("通项公式法表示数列");
        endNodes.add("图像法表示数列");
        endNodes.add("列表法表示数列");
        endNodes.add("有穷数列");
        endNodes.add("无穷数列");
        endNodes.add("递增数列");
        endNodes.add("递减数列");
        endNodes.add("常数列");
        endNodes.add("摆动数列");
        endNodes.add("周期数列");
        endNodes.add("有界数列");
        endNodes.add("无界数列");
        endNodes.add("等差数列");
        endNodes.add("等比数列");
        endNodes.add("一元一次不等式");
        endNodes.add("一元一次不等式组");
        endNodes.add("一元二次不等式");
        endNodes.add("二元一次不等式");
        endNodes.add("基本不等式");
        endNodes.add("几何平均不等式");
        endNodes.add("绝对值不等式");
        endNodes.add("贝努利不等式");
        endNodes.add("柯西不等式");
        endNodes.add("排序不等式");


        return endNodes;
    }
}
